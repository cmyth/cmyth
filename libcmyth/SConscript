#
# libcmyth
#

import sys

Import('env')

prefix = env['PREFIX']

name = 'cmyth'
major = 0
minor = 2
branch = 6
fork = 0

version = [ major, minor, branch, fork ]

libver = env.GenVersion('version.h',
                        VERSION = version)

libs = [ 'refmem' ]

src = [ 'bookmark.c', 'connection.c', 'debug.c', 'event.c',
        'file.c', 'freespace.c', 'keyframe.c',
        'posmap.c', 'proginfo.c', 'proglist.c', 'rec_num.c', 
        'recorder.c', 'ringbuf.c', 'socket.c', 'timestamp.c',
        'livetv.c', 'commbreak.c', 'version.c', 'chanlist.c', 'channel.c',
        'chain.c' ]

if env['HAS_MYSQL'] == 'yes':
    libs += [ 'mysqlclient' ]
    src += [ 'mythtv_mysql.c', 'mysql_query.c' ]

linkflags = env.soname(name, major, minor, branch, fork)

static = env.StaticLibrary(name, src,
                           LIBS = libs,
                           LINKFLAGS = env['LDFLAGS'],
                           LIBPATH = '../librefmem',
                           CPPPATH = [ '../include', '.' ])

shared = env.CMSharedLibrary(name, src,
                             VERSION = version,
                             LINKFLAGS = linkflags + ' ' + env['LDFLAGS'],
                             LIBS = libs,
                             LIBPATH = '../librefmem',
                             CPPPATH = [ '../include', '.' ])

targets = [ static ]

env.Install(prefix + '/lib', static)

if env.build_shared():
    targets += [ shared ]

    env.InstallShared(prefix + '/lib', shared,
                      VERSION = version,
                      NAME = name)

env.Depends(src, libver)

if env.GetOption('clean'):
    env.Clean(targets, [ 'version.h' ])

Return('targets')
